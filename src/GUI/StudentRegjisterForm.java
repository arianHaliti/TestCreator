package GUI;

import BL.Addresses;
import BL.Cities;
import BL.Countries;
import BL.Profesors;
import BL.Programs;
import BL.Students;
import BL.Users;
import DAL.AddressException;
import DAL.AddressRepository;
import DAL.CityException;
import DAL.CityRepository;
import DAL.CountriesRepository;
import DAL.CountryException;
import DAL.ProfesorException;
import DAL.ProgramRepository;
import DAL.ProgramsException;
import DAL.StudentException;
import DAL.StudentRepository;
import DAL.UserException;
import DAL.UserRepository;
import Model.StudentiTableModel;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.beans.PropertyVetoException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author XONI
 */
public class StudentRegjisterForm extends javax.swing.JInternalFrame {
    Users u ;
    AddressRepository ar = new AddressRepository();
    CityRepository ctr = new CityRepository();
    CountriesRepository cr = new CountriesRepository();
    StudentiTableModel stm = new StudentiTableModel();
    StudentRepository sr = new StudentRepository();
    UserRepository ur = new UserRepository();
    ProgramRepository por = new ProgramRepository();
    /**
     * Creates new form StudentGUI
     */
    public StudentRegjisterForm(MainForm mf) {
        initComponents();
        tableLoad();
         Dimension desktopSize = mf.getSize();
        Dimension jInternalFrameSize = this.getSize();
        this.setLocation((desktopSize.width - jInternalFrameSize.width)/2,
        (10));
       // this.setLocation(55,5);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
        private void tableLoad(){
        country_field.setModel(new DefaultComboBoxModel(countries().toArray()));
        List<Students> lista = sr.findAll();
        stm.add(lista);
        studentTable.setModel(stm);
        stm.fireTableDataChanged();
        tabelaSelectedIndexChange();
        //drejtimi
        drejtimi_combo.setModel(new DefaultComboBoxModel(drejtimet().toArray()));
        
        if(country_field.getItemCount()!=0)
            country_field.setSelectedIndex(0);
         ActionEvent ect = null;
        country_fieldActionPerformed(ect);
    }
        
    private  ArrayList<String> countries(){
        List <Countries> temp =cr.findAll();
        ArrayList<String> drejt= new ArrayList<>();
        for(int i = 0; i<temp.size();i++){
            drejt.add(temp.get(i).getCountryname());
        }
        
        return  drejt;
    }
    private  ArrayList<String> drejtimet(){
        List <Programs> temp =por.findAll();
        ArrayList<String> drejt= new ArrayList<>();
        for(int i = 0; i<temp.size();i++){
            drejt.add(temp.get(i).getProgramName());
        }
        
        return  drejt;
    }
    private void tabelaSelectedIndexChange() {
        final ListSelectionModel rowSM = studentTable.getSelectionModel();
        rowSM.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent Ise) {
                if (Ise.getValueIsAdjusting()) {
                    return;
                }
                ListSelectionModel rowSM = (ListSelectionModel) Ise.getSource();
                int selectedIndex = rowSM.getAnchorSelectionIndex();
                if (selectedIndex > -1) {
                    
                    Students s = stm.getStudenti(selectedIndex);
                    first_name_field.setText(s.getUserID().getFirstName());
                    last_name_field.setText(s.getUserID().getSurName());
                    username_field.setText(s.getUserID().getLoginName());
                    password_field.setText(s.getUserID().getHashCode());
                    nr_personal_field.setText(s.getPersonalNumber());
                    gender_field.setSelectedIndex(s.getGender()=='F'?0:1);
                    parentname_field.setText(s.getParentName());
                    infol_btn.setVisible(true);
                    delete_btn.setVisible(true);
                    
                    u=s.getUserID();
                    txtDitelindja.setDate(s.getDateOfBirth());
                    drejtimi_combo.setSelectedItem(s.getProgramID().getProgramName());
                    try{
                        String city =ctr.findCityByStdId(s).getCityName();
                        String coutry =cr.findByCity(city).getCountryname();
                        country_field.setSelectedItem(coutry);
                        city_field.setSelectedItem(city);
                         
                    }catch( CountryException | AddressException   e){
                       System.out.println(e.getMessage());
                    }
                }
            }
        });
    }

    
    
    
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cancel_btn = new javax.swing.JButton();
        first_name_field = new javax.swing.JTextField();
        last_name_field = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        nr_personal_field = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        save_btn = new javax.swing.JButton();
        country_field = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        username_field = new javax.swing.JTextField();
        gender_field = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        delete_btn = new javax.swing.JButton();
        txtDitelindja = new com.toedter.calendar.JDateChooser();
        drejtimi_combo = new javax.swing.JComboBox<>();
        infol_btn = new javax.swing.JButton();
        parentname_field = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        city_field = new javax.swing.JComboBox<>();
        password_field = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("STUDENT'S REGISTRATION FORM");
        setMinimumSize(new java.awt.Dimension(1023, 668));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CREATE STUDENTS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 15), new java.awt.Color(102, 102, 102))); // NOI18N
        jPanel2.setToolTipText("CREATE STUDENTS");
        jPanel2.setName(""); // NOI18N

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Password :");

        jLabel13.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 51));
        jLabel13.setText("Gender :");

        cancel_btn.setForeground(new java.awt.Color(51, 51, 51));
        cancel_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel-button.png"))); // NOI18N
        cancel_btn.setText("CANCEL");
        cancel_btn.setIconTextGap(10);
        cancel_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_btnActionPerformed(evt);
            }
        });

        first_name_field.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        first_name_field.setForeground(new java.awt.Color(51, 51, 51));
        first_name_field.setMargin(new java.awt.Insets(2, 5, 2, 5));
        first_name_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                first_name_fieldActionPerformed(evt);
            }
        });

        last_name_field.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        last_name_field.setForeground(new java.awt.Color(51, 51, 51));
        last_name_field.setMargin(new java.awt.Insets(2, 5, 2, 5));
        last_name_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                last_name_fieldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("First name :");

        nr_personal_field.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        nr_personal_field.setForeground(new java.awt.Color(51, 51, 51));
        nr_personal_field.setMargin(new java.awt.Insets(2, 5, 2, 5));
        nr_personal_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nr_personal_fieldActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Country :");

        save_btn.setForeground(new java.awt.Color(51, 51, 51));
        save_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        save_btn.setText("SAVE");
        save_btn.setIconTextGap(10);
        save_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_btnActionPerformed(evt);
            }
        });

        country_field.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        country_field.setForeground(new java.awt.Color(51, 51, 51));
        country_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                country_fieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Last name :");

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("City :");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Nr Personal :");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Username :");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Birthday :");

        username_field.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        username_field.setForeground(new java.awt.Color(51, 51, 51));
        username_field.setMargin(new java.awt.Insets(2, 5, 2, 5));
        username_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                username_fieldActionPerformed(evt);
            }
        });

        gender_field.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        gender_field.setForeground(new java.awt.Color(51, 51, 51));
        gender_field.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Female", "Male" }));

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Drejtimi :");

        delete_btn.setForeground(new java.awt.Color(51, 51, 51));
        delete_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rubbish-bin.png"))); // NOI18N
        delete_btn.setText("DELETE");
        delete_btn.setIconTextGap(10);
        delete_btn.setVisible(false);
        delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_btnActionPerformed(evt);
            }
        });

        drejtimi_combo.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        drejtimi_combo.setForeground(new java.awt.Color(51, 51, 51));
        drejtimi_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drejtimi_comboActionPerformed(evt);
            }
        });

        infol_btn.setForeground(new java.awt.Color(51, 51, 51));
        infol_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/open-book.png"))); // NOI18N
        infol_btn.setText("ADD MORE INFO");
        infol_btn.setIconTextGap(10);
        infol_btn.setVisible(false);
        infol_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infol_btnActionPerformed(evt);
            }
        });

        parentname_field.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        parentname_field.setForeground(new java.awt.Color(51, 51, 51));
        parentname_field.setMargin(new java.awt.Insets(2, 5, 2, 5));
        parentname_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parentname_fieldActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Emri i Prindit :");

        city_field.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        city_field.setForeground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(save_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(country_field, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(3, 3, 3)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(112, 112, 112))
                                    .addComponent(city_field, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cancel_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(jLabel9)
                            .addComponent(drejtimi_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(gender_field, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(infol_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(parentname_field, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 145, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(first_name_field, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(last_name_field, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(nr_personal_field, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(username_field, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(password_field, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtDitelindja, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDitelindja, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(password_field, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(username_field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(3, 3, 3)
                        .addComponent(nr_personal_field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(3, 3, 3)
                        .addComponent(last_name_field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(3, 3, 3)
                        .addComponent(first_name_field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(drejtimi_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(country_field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(gender_field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(parentname_field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(city_field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel13)
                            .addComponent(jLabel7))
                        .addGap(33, 33, 33)))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(infol_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TABLE OF STUDENTS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 15), new java.awt.Color(102, 102, 102))); // NOI18N

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(studentTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 866, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(158, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void username_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_username_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_username_fieldActionPerformed

    private void nr_personal_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nr_personal_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nr_personal_fieldActionPerformed

    private void last_name_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_last_name_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_last_name_fieldActionPerformed

    private void first_name_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_first_name_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_first_name_fieldActionPerformed

    private void cancel_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_btnActionPerformed
        emptyFields();
    }//GEN-LAST:event_cancel_btnActionPerformed

    private void save_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_btnActionPerformed
       try {
        int row =studentTable.getSelectedRow();
        if(!errorCheck()) {
            if (row == -1) {
                Students s = new Students();
                Users u = new Users();
                Addresses a = new Addresses();
                u.setLoginName(username_field.getText());
                u.setFirstName(first_name_field.getText());
                u.setSurName(last_name_field.getText());
                u.setHashCode(password_field.getText());
                s.setDateOfBirth(txtDitelindja.getDate());
                s.setParentName(parentname_field.getText());//CHANGE
                s.setPersonalNumber(nr_personal_field.getText());
                s.setGender(gender_field.getSelectedIndex()==0?'F':'M');
                System.out.println(drejtimi_combo.getSelectedItem()+"======  "+por.findByUsername(drejtimi_combo.getSelectedItem()+""));
                s.setProgramID(por.findByUsername(drejtimi_combo.getSelectedItem()+""));
                
                a.setCityID(ctr.findByName((String)city_field.getSelectedItem()));
                a.setStreetName("NoN");
              
                u.setPrivilege(2);
                s.setUserID(u);
         
                
                a.setStudentID(s);
                
                ur.create(u);
                sr.create(s);
                ar.create(a);
                 int res =JOptionPane.showConfirmDialog(null,
"Profesori u ruajt me sukses ,Deshironi te mbushni Informacione shtes?",null, JOptionPane.YES_NO_OPTION);
                    if(res == JOptionPane.YES_OPTION){
                        this.u = u;
                        infol_btnActionPerformed(evt);
                    }
            } else {
                Students s = this.stm.getStudenti(row);
                Addresses a = ar.findByStdId(s);
                //s.getUserID().setLoginName(username_field.getText());
                s.getUserID().setHashCode(password_field.getText());
                s.getUserID().setFirstName(first_name_field.getText());
                s.getUserID().setSurName(last_name_field.getText());
                s.setDateOfBirth(txtDitelindja.getDate());
                s.setPersonalNumber(nr_personal_field.getText());
                s.setGender(gender_field.getSelectedIndex()==0?'F':'M');
                s.setProgramID(por.findByUsername(drejtimi_combo.getSelectedItem()+""));
                s.setInTestStatus(false);
                s.setParentName(parentname_field.getText());
               
                a.setCityID(ctr.findByName((String)city_field.getSelectedItem()));
                
                sr.edit(s);
                JOptionPane.showMessageDialog(this, "E dhëna u ruajt me sukses !");
            }
            emptyFields();
            tableLoad();
        };

        } catch (StudentException | UserException |ProgramsException |AddressException |CityException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }  

    }//GEN-LAST:event_save_btnActionPerformed
    
    private void infol_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infol_btnActionPerformed
        if(this.getParent().getComponentCount()>1){
            
        }else{
            MoreInfos ea = new MoreInfos(u);
            this.getParent().add(ea);
            ea.show();
        }
    }//GEN-LAST:event_infol_btnActionPerformed

    private void parentname_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parentname_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_parentname_fieldActionPerformed

    private void delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_btnActionPerformed
        try{
            int row = studentTable.getSelectedRow();
            if(row > -1){
                Object [] ob = {"Po","Jo"};
                int i = javax.swing.JOptionPane.showOptionDialog(this, "A dëshironi ta fshini ?", "Fshirja", JOptionPane.OK_OPTION,JOptionPane.QUESTION_MESSAGE, null, ob, ob[1]);
                if(i==0){
                    Students s = this.stm.getStudenti(row);
                    
                    try{
                        ar.remove(ar.findByStdId(s)); 
                    }catch(AddressException e){}
                    sr.remove(s);
                    ur.remove(s.getUserID());
                    tableLoad();
                    emptyFields();
                    JOptionPane.showMessageDialog(this, "E dhëna është fshir me sukses !");
                }
            }
            else{
                JOptionPane.showMessageDialog(this,"Nuk keni selektuar asgjë për të fshir !");
            }
        }catch(StudentException |UserException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_delete_btnActionPerformed

    private void country_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_country_fieldActionPerformed
     
        List <Cities> temp =ctr.findByCountryName((String) country_field.getSelectedItem());
      
        ArrayList<String> drejt= new ArrayList<>();
        
        for(int i = 0; i<temp.size();i++)
            drejt.add(temp.get(i).getCityName());
        
        city_field.setModel(new DefaultComboBoxModel(drejt.toArray()));
    }//GEN-LAST:event_country_fieldActionPerformed

    private void drejtimi_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drejtimi_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drejtimi_comboActionPerformed

    
    
        public void emptyFields(){
        studentTable.clearSelection();
        username_field.setText("");
        first_name_field.setText("");
        last_name_field.setText("");
        password_field.setText("");
        parentname_field.setText("");
        //degreeField.setText("");
        txtDitelindja.setDate(null);
        nr_personal_field.setText("");
        gender_field.setSelectedIndex(0);
        drejtimi_combo.setSelectedIndex(0);
        country_field.setSelectedIndex(0);
        
        ActionEvent ect = null;
        country_fieldActionPerformed(ect);
        infol_btn.setVisible(false);
        delete_btn.setVisible(false);
    }
     public boolean errorCheck(){
        
        String pattern ="(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\S+$).{8,}";// Strong password
        //String number =".*\\d+.*";//A osht numer
        String letters = "[a-zA-ZÇçËë]+?"; // a osht fjal pa numer
        Timestamp stamp = new Timestamp(System.currentTimeMillis());
         Date date = new Date(stamp.getTime());
         
         
        if (first_name_field.getText().equals("") || !first_name_field.getText().matches(letters)) {
            JOptionPane.showMessageDialog(this, first_name_field.getText().equals("")
                    ?"Mbush emrin":"Emri duhet te jet vetem me shkronja",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }else if(first_name_field.getText().length()>50){
            JOptionPane.showMessageDialog(this,"Emri eshte shum i madhe",
                    "Error", JOptionPane.ERROR_MESSAGE);
           return true;   
          }
        
        else if(last_name_field.getText().equals("") || !last_name_field.getText().matches(letters) ){
            JOptionPane.showMessageDialog(this, last_name_field.getText().equals("")
                    ?"Mbush mbiemrin":"Mbiemri duhet te jet vetem me shkronja",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }else if(last_name_field.getText().length()>50){
            JOptionPane.showMessageDialog(this,"Mbiemri eshte shum i madhe",
                    "Error", JOptionPane.ERROR_MESSAGE);
           return true;   
          }
        else if (nr_personal_field.getText().equals("") || !nr_personal_field.getText().matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, nr_personal_field.getText().equals("")
                    ?"Mbush numrin personal ":"Numri personal duhet te jete vetem numer",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        else if(nr_personal_field.getText().length()>30){
            JOptionPane.showMessageDialog(this,"NR personal eshte shum i madhe",
                    "Error", JOptionPane.ERROR_MESSAGE);
           return true;   
          }
        else if (username_field.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Mbush user name :", "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        } 
        else if(username_field.getText().length()>30){
            JOptionPane.showMessageDialog(this,"username eshte shum i madhe",
                    "Error", JOptionPane.ERROR_MESSAGE);
           return true;   
          }
        else if(!password_field.getText().matches(pattern)){
            JOptionPane.showMessageDialog(this,
                    "Passwordi duhet  te ket se paku 8 characters, 1 uppercase ,"
                            + "1 numer, 1 lowercase ,1 special char dhe pa zbarzesira"
                    , "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        else if(password_field.getText().length()>50){
            JOptionPane.showMessageDialog(this,"passwordi eshte shum i madhe",
                    "Error", JOptionPane.ERROR_MESSAGE);
           return true;   
          }
         
        else if(txtDitelindja.getDate()==null ){
                    JOptionPane.showMessageDialog(this,
                       "Mbushni daten e lindjes sakt"
                        , "Error", JOptionPane.ERROR_MESSAGE);
                return true;
        }
        else if( txtDitelindja.getDate().after(date)){
            JOptionPane.showMessageDialog(this,
                       "Data eshte dhene ne te ardhmen !"
                        , "Error", JOptionPane.ERROR_MESSAGE);
                return true;
        }
        else if(txtDitelindja.getDate().before(java.sql.Date.valueOf("1900-12-12"))){
            JOptionPane.showMessageDialog(this,
                       "Data eshte dhene shume e vjeter"
                        , "Error", JOptionPane.ERROR_MESSAGE);
                return true;
        }
        else if(date.getYear()-txtDitelindja.getDate().getYear() <15){
            System.out.println(date.compareTo(txtDitelindja.getDate()));
            JOptionPane.showMessageDialog(this,
                       "Personi eshte shum i ri !"
                        , "Error", JOptionPane.ERROR_MESSAGE);
                return true;
        }
        else if(parentname_field.getText().matches(letters)){
            JOptionPane.showMessageDialog(this,"Emri i prindit duhet te jet vetem me shkronja",
                    "Error", JOptionPane.ERROR_MESSAGE);
           return true;   
          }
        
        else if(parentname_field.getText().length()>50){
            JOptionPane.showMessageDialog(this,"Emri Prindit eshte shum i madhe",
                    "Error", JOptionPane.ERROR_MESSAGE);
           return true;   
          }
        
        
        return false;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel_btn;
    private javax.swing.JComboBox<String> city_field;
    private javax.swing.JComboBox<String> country_field;
    private javax.swing.JButton delete_btn;
    private javax.swing.JComboBox<String> drejtimi_combo;
    private javax.swing.JTextField first_name_field;
    private javax.swing.JComboBox<String> gender_field;
    private javax.swing.JButton infol_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField last_name_field;
    private javax.swing.JTextField nr_personal_field;
    private javax.swing.JTextField parentname_field;
    private javax.swing.JPasswordField password_field;
    private javax.swing.JButton save_btn;
    private javax.swing.JTable studentTable;
    private com.toedter.calendar.JDateChooser txtDitelindja;
    private javax.swing.JTextField username_field;
    // End of variables declaration//GEN-END:variables
}
