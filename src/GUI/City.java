/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BL.Cities;
import BL.Countries;
import BL.Users;
import DAL.CityException;
import DAL.CityRepository;
import DAL.StudentRepository;
import DAL.UserRepository;
import Model.CityTableModel;
import Model.StudentiTableModel;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Hello
 */
public class City extends javax.swing.JInternalFrame {
    Users u;
    Cities ci;
    Countries c;
    UserRepository ur = new UserRepository();
    CityTableModel ctm = new CityTableModel();
    CityRepository cr = new CityRepository();
    
    /**
     * Creates new form City
     */
    public City(Countries c) {
        initComponents();
        this.c=c;
        tabelaLoad();
        this.setLocation(350,40);
        
        
    }
    
    public void emptyObject(){
        cityTable.clearSelection();
        city_field.setText("");
    }

    private void tabelaLoad(){
        List<Cities> lista = cr.findByCountry(c);
        ctm.add(lista);
        cityTable.setModel(ctm);
        ctm.fireTableDataChanged();
        tabelaSelectedIndexChange();
    }
    
    private void tabelaSelectedIndexChange(){
        final ListSelectionModel rowSM = cityTable.getSelectionModel();
        rowSM.addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(e.getValueIsAdjusting()){
                    return;
                }
                ListSelectionModel rowSM = (ListSelectionModel) e.getSource();
                int selectedIndex = rowSM.getAnchorSelectionIndex();
                if(selectedIndex > -1){
                    Cities city = ctm.getCities(selectedIndex);
                    
                    city_field.setText(city.getCityName());
                }
            }
            
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        city_field = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        cityTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        delete_btn = new javax.swing.JButton();
        save_btn = new javax.swing.JButton();
        cancel_btn = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setMinimumSize(new java.awt.Dimension(650, 364));

        city_field.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        city_field.setForeground(new java.awt.Color(51, 51, 51));
        city_field.setMargin(new java.awt.Insets(2, 5, 2, 5));

        cityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(cityTable);

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Add city");

        delete_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rubbish-bin.png"))); // NOI18N
        delete_btn.setText("DELETE");
        delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_btnActionPerformed(evt);
            }
        });

        save_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        save_btn.setText("SAVE");
        save_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_btnActionPerformed(evt);
            }
        });

        cancel_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel-button.png"))); // NOI18N
        cancel_btn.setText("CANCEL");
        cancel_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(city_field)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(213, 213, 213))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(save_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(cancel_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(city_field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancel_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_btnActionPerformed
        try{
            int row = cityTable.getSelectedRow();
            if(row > -1){
                Object [] ob = {"Po","Jo"};
                int i = javax.swing.JOptionPane.showOptionDialog(this, "A dëshironi ta fshini ?", "Fshirja", JOptionPane.OK_OPTION,JOptionPane.QUESTION_MESSAGE, null, ob, ob[1]);
                if(i==0){
                    Cities city = this.ctm.getCities(row);
                    cr.remove(city);
                    tabelaLoad();
                    emptyObject();
                    JOptionPane.showMessageDialog(this, "E dhëna është fshir me sukses !");
                }
            }
            else{
                JOptionPane.showMessageDialog(this,"Nuk keni selektuar asgjë për të fshir !");
            }
        }catch(CityException ce){
            JOptionPane.showMessageDialog(this, ce.getMessage());
        }        // TODO add your handling code here:
    }//GEN-LAST:event_delete_btnActionPerformed

    private void save_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_btnActionPerformed
        try {
            int row = cityTable.getSelectedRow();
            if (city_field.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Ju lutem Shkruani Qytetin :", "Error", JOptionPane.ERROR_MESSAGE);
                
            }
            else if(!city_field.getText().matches("^[a-zA-Z\\s]*$")){
            JOptionPane.showMessageDialog(this, "Qyteti duhet te jete vetem me shkronja:", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else if(city_field.getText().length()>50){
            JOptionPane.showMessageDialog(this, "emri i qyteti eshte shum i madh", "Error", JOptionPane.ERROR_MESSAGE);
                
            }
            else if(city_field.getText().trim().equals("")){
JOptionPane.showMessageDialog(this, "Qyteti nuk lejohet te jet zbrazesir", "Error", JOptionPane.ERROR_MESSAGE);
            
                
            }  else {
                if (row == -1) {
                    Cities city = new Cities();
                    city.setCityName(city_field.getText());
                    city.setCountryID(c);
                    cr.create(city);
                    JOptionPane.showMessageDialog(this, "E dhëna u ruajt me sukses !");
                } else {
                    Cities city = this.ctm.getCities(row);

                    city.setCityName(city_field.getText());

                    cr.edit(city);
                    JOptionPane.showMessageDialog(this, "E dhëna u editua me sukses");
                }
                emptyObject();
                tabelaLoad();
            };

        } catch (CityException ce) {
            JOptionPane.showMessageDialog(this, ce.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_save_btnActionPerformed

    private void cancel_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_btnActionPerformed
        emptyObject();        // TODO add your handling code here:
    }//GEN-LAST:event_cancel_btnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel_btn;
    private javax.swing.JTable cityTable;
    private javax.swing.JTextField city_field;
    private javax.swing.JButton delete_btn;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JButton save_btn;
    // End of variables declaration//GEN-END:variables



}
